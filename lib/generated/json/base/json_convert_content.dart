// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:relax/data/model/login_entity.dart';
import 'package:relax/generated/json/login_entity_helper.dart';
import 'package:relax/data/model/register_entity.dart';
import 'package:relax/generated/json/register_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case LoginEntity:
			return loginEntityFromJson(data as LoginEntity, json) as T;			case LoginUser:
			return loginUserFromJson(data as LoginUser, json) as T;			case LoginUserRole:
			return loginUserRoleFromJson(data as LoginUserRole, json) as T;			case RegisterEntity:
			return registerEntityFromJson(data as RegisterEntity, json) as T;			case RegisterUser:
			return registerUserFromJson(data as RegisterUser, json) as T;    }
    return data as T;
  }  static _getToJson<T>(Type type, data) {
		switch (type) {			case LoginEntity:
			return loginEntityToJson(data as LoginEntity);			case LoginUser:
			return loginUserToJson(data as LoginUser);			case LoginUserRole:
			return loginUserRoleToJson(data as LoginUserRole);			case RegisterEntity:
			return registerEntityToJson(data as RegisterEntity);			case RegisterUser:
			return registerUserToJson(data as RegisterUser);    }
    return data as T;
  }  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {			case 'LoginEntity':
			return LoginEntity().fromJson(json) as T;			case 'LoginUser':
			return LoginUser().fromJson(json) as T;			case 'LoginUserRole':
			return LoginUserRole().fromJson(json) as T;			case 'RegisterEntity':
			return RegisterEntity().fromJson(json) as T;			case 'RegisterUser':
			return RegisterUser().fromJson(json) as T;    }
    return null;
  }}